# Automatically generated by Pynguin.
import _sysinfo as module0


def test_case_0():
    try:
        var0 = -1984.0
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = ()
        var7 = {var4, var0}
        var8 = var6, var7, var6
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = 258.9406
        var1 = {var0: var0, var0: var0, var0: var0, var0: var0}
        var2 = {var1: var0}
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {}
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = b'<^\xf6\x8d\xceI\x87\xd1\xbcG\xb5\xceh \x90\x04\xc8\x84'
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = [var0]
        var5 = module0.pkg_commit_hash(var4)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_10():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = []
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_11():
    try:
        var0 = b'\xbd\x86\xd3\xde\xbb\xa6s\xcd\x94\xfaA\xf1\xfb'
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_12():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {}
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_13():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_14():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_15():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = b'\xd4\xa8\x1aO\xb9\xb1\xba'
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_16():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {var1: var1, var1: var0, var1: var0}
        var3 = {var1: var0, var2: var1, var2: var2}
    except BaseException:
        pass


def test_case_17():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = '.j\\D'
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_18():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {var2: var6, var3: var0}
        var11 = {var10: var7}
    except BaseException:
        pass


def test_case_19():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = ()
        var5 = module0.pkg_commit_hash(var4)
    except BaseException:
        pass


def test_case_20():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '.j\\D'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_21():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = ':B-@T<\ru ({\\'
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_22():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = {var6: var9}
        var13 = {var8: var5, var9: var12, var7: var1, var9: var0}
        var14 = module0.pkg_commit_hash(var13)
    except BaseException:
        pass


def test_case_23():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = b'\xc1\xee\xd4\xd6\xf1a\xadC\xb7\x0b\xe3\xa3\xcay\xad'
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_24():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '#U'
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_25():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = True
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_26():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = ')K(.O3\x0b.T'
        var26 = [var19, var24, var25]
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_27():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_28():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_29():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_30():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = -3959
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_31():
    try:
        var0 = None
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_32():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = {var0, var4, var2, var3}
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_33():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = {var19: var6}
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_34():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_35():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_36():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = {var12: var3, var2: var9, var16: var15, var5: var15}
        var18 = module0.pkg_commit_hash(var17)
    except BaseException:
        pass


def test_case_37():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var5: var11}
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_38():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_39():
    try:
        var0 = '1J8\\eX@Z@(\tL a:'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_40():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_41():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = []
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_42():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_43():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 1202.1
        var7 = module0.pkg_commit_hash(var6)
    except BaseException:
        pass


def test_case_44():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = -3959
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_45():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_46():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_47():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '_\nCx^'
        var19 = True
        var20 = ()
        var21 = var18, var19, var20
        var22 = module0.pkg_info(var21)
    except BaseException:
        pass


def test_case_48():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = b'bZ\xf4qL\x06\xf5\x86\x95\x83\xc1\xcd\xb3\xa9\x00\xceK'
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_49():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = ()
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_50():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = -2268
        var15 = (
            '/home/tobi/Projects/CSCI926-Project/notebook/notebook/notebook')
        var16 = -2050
        var17 = {var2, var2, var16, var11}
        var18 = {var14: var3, var2: var15, var5: var8, var17: var3}
    except BaseException:
        pass


def test_case_51():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = b'\x9b\x13\x01\x01\xf1\xd4\xc3O@q}\x88q`\xf5N\xdd\xb03u'
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_52():
    try:
        var0 = b's5<f<c}i>\x98\x910\xbe\xb9\x9eM\x93\xd0\xcd'
        var1 = [var0]
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_53():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_54():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = b'\xceR^.\\2\n\x80'
        var7 = {var5, var6, var6, var6}
        var8 = module0.pkg_commit_hash(var7)
    except BaseException:
        pass


def test_case_55():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = b'\x10'
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_56():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'gux\\^M,AD'
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_57():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = "BYVl%\t(6@'"
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_58():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_59():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_60():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 2337
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_61():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_62():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_63():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = set()
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_64():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = {var0: var0, var1: var2}
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_65():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = -2471.0
        var18 = -900.05787
        var19 = {var15: var17, var0: var18, var10: var15, var7: var14}
        var20 = '}Srz'
        var21 = None
        var22 = var2, var21
        var23 = var20, var19, var22, var19
        var24 = var16, var19, var23
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_66():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = '/home/tobi/Projects/CSCI926-Project/notebook/notebook/notebook'
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_67():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = b'\xda\xc6N\xa3\xd7\n\xd0\xafQ\x7f&'
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_68():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_69():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 300
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_70():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_71():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_72():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_73():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_74():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = -1813.557653
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_75():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_76():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 2719
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_77():
    try:
        var0 = 365
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_78():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = False
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_79():
    try:
        var0 = "|'ZtC\x0b|O:Ks/?iUq"
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_80():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_81():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_82():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_83():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {var3: var3}
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_84():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = {var14}
        var17 = module0.pkg_commit_hash(var16)
    except BaseException:
        pass


def test_case_85():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = {var7: var7, var4: var11}
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_86():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = []
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_87():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 1180.215
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_88():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_89():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_90():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = {var2: var2}
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_91():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = False
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_92():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_93():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_94():
    try:
        var0 = True
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_95():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_96():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = b'w\x9cw\x9b\xeaecE\xda\xben\x00\x08E\x94R\x05cC'
        var17 = module0.pkg_commit_hash(var16)
    except BaseException:
        pass


def test_case_97():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var6: var14}
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_98():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = True
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_99():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = b'\xc4p+e\xfd\x89;:\n\xd8Q'
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_100():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = []
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_101():
    try:
        var0 = False
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_102():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = {var3, var16}
        var23 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_103():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {var4}
        var7 = -2092
        var8 = var6, var7, var7
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_104():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_105():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_106():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = {var7, var10, var9}
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_107():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_108():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_109():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = set()
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_110():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 1582
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_111():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_112():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_113():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_114():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = {var14, var7}
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_115():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = []
        var7 = module0.pkg_commit_hash(var6)
    except BaseException:
        pass


def test_case_116():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = {var12}
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_117():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 89
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_118():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = [var3, var8, var8]
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_119():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = b'\xab.*\xe0Y\xb5\xde&\x80F'
        var17 = module0.pkg_commit_hash(var16)
    except BaseException:
        pass


def test_case_120():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = [var1]
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_121():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = {var1, var3}
        var5 = module0.pkg_commit_hash(var4)
    except BaseException:
        pass


def test_case_122():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_123():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = {}
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_124():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = -2789
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_125():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = {var10, var4}
        var25 = []
        var26 = -440
        var27 = {var14: var20, var12: var26, var22: var6, var2: var7}
        var28 = var24, var25, var27, var24
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_126():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 1004
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_127():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_128():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_129():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = b'?>\xa1\x90W\x08\x88T\x12H\x10'
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_130():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_131():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_132():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = None
        var26 = b'\xd9aa'
        var27 = var24, var25, var26
        var28 = {var27, var24, var7, var22}
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_133():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = "l_7h 'h}"
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_134():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_135():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_136():
    try:
        var0 = 618
        var1 = {var0}
        var2 = {var1, var1, var1, var1}
    except BaseException:
        pass


def test_case_137():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 1073
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_138():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = b'\x1f\xb7'
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_139():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_140():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_141():
    try:
        var0 = b'\xde\x93xu1\x1c\xb4NPb7\x7fs\x1c\x14K\xf4'
        var1 = 'mL+#K8\x0c-beWxl+vEz['
        var2 = [var1, var0]
        var3 = [var0, var2]
        var4 = module0.pkg_info(var3)
    except BaseException:
        pass


def test_case_142():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = set()
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_143():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_144():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = b'b\xfc\xc9\xdd\x0efC\x82\x1eC\xf1{'
        var5 = module0.pkg_commit_hash(var4)
    except BaseException:
        pass


def test_case_145():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_146():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 1718
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_147():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\nZ#bJmCua?4QpvOMM'
        var7 = [var3, var0, var3]
        var8 = [var6, var7, var7]
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_148():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = b'\xdf\x01\xfb&'
        var23 = {var10: var8, var17: var13, var18: var21}
        var24 = {var16: var19, var18: var15, var22: var23, var18: var18}
        var25 = [var8]
        var26 = var22, var24, var25
        var27 = module0.pkg_commit_hash(var26)
    except BaseException:
        pass


def test_case_149():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = -853
        var13 = b''
        var14 = var12, var6, var13
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_150():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_151():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_152():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = {var15, var5}
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_153():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = True
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_154():
    try:
        var0 = None
        var1 = [var0, var0]
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_155():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 3324
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_156():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = b'-b4\xe2\xc5]\xa7\x80?\xed\x9dk\xea;\xf0?\xa2\xff\xf0\xc2'
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_157():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = [var1, var1]
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_158():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = {var22}
        var27 = module0.pkg_commit_hash(var26)
    except BaseException:
        pass


def test_case_159():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = ()
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_160():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_161():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_162():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = -1276
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_163():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = {var16}
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_164():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_165():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = [var9, var4, var8]
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_166():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_167():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = [var17, var21, var4]
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_168():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_169():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_170():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '#U'
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_171():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_172():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 1620.0
        var7 = module0.pkg_commit_hash(var6)
    except BaseException:
        pass


def test_case_173():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = True
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_174():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = b'\x13\x89e\n\xc7T\x840'
        var27 = module0.pkg_commit_hash(var26)
    except BaseException:
        pass


def test_case_175():
    try:
        var0 = None
        var1 = var0,
        var2 = module0.pkg_info(var1)
    except BaseException:
        pass


def test_case_176():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_177():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = -1584
        var7 = module0.pkg_commit_hash(var6)
    except BaseException:
        pass


def test_case_178():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_179():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_180():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_181():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {}
        var7 = {var5, var5, var6}
    except BaseException:
        pass


def test_case_182():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'T?c/23=n[q>L'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_183():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 3696
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_184():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = ",J'~SBACzLI<88"
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_185():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = b'i\xa4\xcan\xe36\x1c(u'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_186():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_187():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = ()
        var15 = [var14, var3]
        var16 = module0.pkg_info(var15)
    except BaseException:
        pass


def test_case_188():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = {var18: var8, var14: var11, var29: var28, var24: var2}
        var35 = b'\x81"\xe9\x96\xa8'
        var36 = [var31, var17]
        var37 = var34, var35, var36
        var38 = module0.pkg_info(var37)
    except BaseException:
        pass


def test_case_189():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = [var10]
        var29 = {var22: var28, var13: var5, var24: var9}
        var30 = module0.pkg_info(var29)
    except BaseException:
        pass


def test_case_190():
    try:
        var0 = False
        var1 = [var0, var0]
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_191():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_192():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = False
        var29 = [var3, var16, var28]
        var30 = module0.pkg_commit_hash(var29)
    except BaseException:
        pass


def test_case_193():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_194():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_195():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_196():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = True
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_197():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_198():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = b'e\xad\xa4'
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_199():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '@f;m}\\SK'
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_200():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_201():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'PH&bT&0b?}-28'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_202():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = b'\xf3\xc5\xccj\xdb\x98n\xa5%\xd1\xf5j\xb5Y\x91\xc4m\xdb'
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_203():
    try:
        var0 = 96
        var1 = -1199
        var2 = 'x'
        var3 = {var2}
        var4 = 681.49
        var5 = var2, var3, var4
        var6 = True
        var7 = var1, var5, var6
        var8 = 2691
        var9 = -550
        var10 = var0, var7, var8, var9
        var11 = [var10, var6, var9, var6]
        var12 = module0.pkg_info(var11)
    except BaseException:
        pass


def test_case_204():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 2027.88
        var33 = module0.pkg_commit_hash(var32)
    except BaseException:
        pass


def test_case_205():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {}
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_206():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = [var4, var9, var7, var2]
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_207():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_208():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = False
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_209():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_210():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_211():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'T?c/23=n[q>L'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = b'\xcb$\x9f\x9an\x8a3\xa1\x0fZlLv9X\x92'
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_212():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_213():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = [var0, var10, var3, var0]
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_214():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_215():
    try:
        var0 = 1582
        var1 = None
        var2 = [var0, var1]
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_216():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_217():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_218():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = [var18]
        var27 = True
        var28 = []
        var29 = {var26: var21, var27: var28}
    except BaseException:
        pass


def test_case_219():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = {}
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_220():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_221():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_222():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_223():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = False
        var41 = 'Y'
        var42 = {var40: var41, var36: var31, var8: var18}
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_224():
    try:
        var0 = None
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_225():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_226():
    try:
        var0 = '-0Hxq'
        var1 = {var0}
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_227():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 1620.0
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_228():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = {var1, var2}
        var5 = module0.pkg_commit_hash(var4)
    except BaseException:
        pass


def test_case_229():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_230():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = -97
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_231():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_232():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = []
        var22 = -97
        var23 = {var13, var21, var22}
    except BaseException:
        pass


def test_case_233():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = [var1, var0, var1, var0]
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_234():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_235():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_236():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = True
        var28 = {var26, var27, var22, var5}
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_237():
    try:
        var0 = True
        var1 = None
        var2 = var0, var1
        var3 = b'\x87\x9e\x03[\x15\x18\x8fV\xea\xf2'
        var4 = []
        var5 = var2, var3, var4
        var6 = module0.pkg_info(var5)
    except BaseException:
        pass


def test_case_238():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'T?c/23=n[q>L'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = -2250.9
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_239():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_240():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_241():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var7: var10, var0: var2}
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_242():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_243():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_244():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = b'5\xd4\x93\xaa'
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_245():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_246():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = {var9: var28}
        var31 = module0.pkg_commit_hash(var30)
    except BaseException:
        pass


def test_case_247():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '|1AvEN$rA6(q1KV\\Br]'
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_248():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -69
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_249():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = b'\x16\x92\xa3\xc4\xd7,\xb8\xff\xbe\\X\x8e|\xb6\xaf\x99\xbf'
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_250():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_251():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'T?c/23=n[q>L'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = var12,
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_252():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 4086.8
        var41 = module0.pkg_info(var40)
    except BaseException:
        pass


def test_case_253():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_254():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_255():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {var5, var1}
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_256():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_257():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = ()
        var43 = module0.pkg_commit_hash(var42)
    except BaseException:
        pass


def test_case_258():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = {}
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_259():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = {var20, var17, var7, var9}
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_260():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_261():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '}<\\9w'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'T?c/23=n[q>L'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_262():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 1970
        var25 = var6, var24, var2
        var26 = module0.pkg_commit_hash(var25)
    except BaseException:
        pass


def test_case_263():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = [var24, var7, var14]
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_264():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'c:7;_skS{g='
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = '}<\\9w'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_265():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = "l_7h 'h}"
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_266():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_267():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'pPQ)&w/<-h1e'
        var5 = {var2: var2, var1: var1, var1: var4}
        var6 = module0.pkg_info(var5)
    except BaseException:
        pass


def test_case_268():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = False
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_269():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'Sd|y1wq&c'
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_270():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_271():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_272():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'Yz~JVue Bu"'
        var15 = {var8}
        var16 = var14, var15
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_273():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_274():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = []
        var37 = module0.pkg_info(var36)
    except BaseException:
        pass


def test_case_275():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_276():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_277():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_278():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_279():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'c:7;_skS{g='
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = b'\\\xc3\xd5,Quu\xa8'
        var43 = module0.pkg_commit_hash(var42)
    except BaseException:
        pass


def test_case_280():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = b'\xfb\x80!\x98\x13\x98N\xe6"f\xa3.\xa4\x90r<|P'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_281():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_282():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_283():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = b'\x86\x9a\x96;^\x01\\j<\xe0\xd5I\xf90\xad\t'
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_284():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_285():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = set()
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_286():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = [var0, var18, var0]
        var33 = {var32: var30, var23: var32, var21: var28, var10: var23}
    except BaseException:
        pass


def test_case_287():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_288():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_289():
    try:
        var0 = -2000.649686
        var1 = {var0: var0}
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_290():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = {var16}
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_291():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_292():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = '}<\\9w'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_293():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'c:7;_skS{g='
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = False
        var43 = {var2, var0, var36}
        var44 = {var43: var25, var28: var31}
    except BaseException:
        pass


def test_case_294():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = [var16, var12]
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_295():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = {var21: var18, var16: var17, var21: var5}
        var31 = module0.pkg_commit_hash(var30)
    except BaseException:
        pass


def test_case_296():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = False
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_297():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = var28, var6, var14
        var30 = {var20: var12, var20: var29}
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_298():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_299():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_300():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_301():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_302():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_303():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 410
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_304():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = [var1, var25, var8, var24]
        var31 = module0.pkg_commit_hash(var30)
    except BaseException:
        pass


def test_case_305():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_306():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'c:7;_skS{g='
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = True
        var39 = [var23, var38, var36, var8]
        var40 = {var22: var8, var24: var6, var32: var39}
        var41 = module0.pkg_commit_hash(var40)
    except BaseException:
        pass


def test_case_307():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = -1115
        var23 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_308():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 710
        var17 = {var9, var3}
        var18 = var16, var17
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_309():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_310():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_311():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = b'\x1dD/\x1cC?rUi\x80j\xa5\x13@}l\x10\xc3\xd9'
        var39 = module0.pkg_commit_hash(var38)
    except BaseException:
        pass


def test_case_312():
    try:
        var0 = b'\x98K\xcc\xb90iH\xcb\x8c\xe03-'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_313():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = True
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_314():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = b'tt<\x94\xb2\x98\xf6\xb0\x14'
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_315():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_316():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_317():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = b'^\x7fL\x88\xaf\x12ko\xba3\xec\x10\xa9s`L\xce\x8b'
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_318():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = [var15, var3, var5, var12]
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_319():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_320():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = {var5: var25, var15: var2, var10: var27}
        var33 = var32,
        var34 = module0.pkg_info(var33)
    except BaseException:
        pass


def test_case_321():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_322():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'T?c/23=n[q>L'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = b',\xb9\xac\x8c\xf1M)N\x8c\xc99\x8eY\xef\xa7'
        var37 = {var36: var29, var1: var3, var36: var19}
        var38 = module0.pkg_info(var37)
    except BaseException:
        pass


def test_case_323():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'parent_header'
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_324():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = b'\x98\x15\xc1Q\\\x01'
        var39 = module0.pkg_info(var38)
    except BaseException:
        pass


def test_case_325():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = -327.4166
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_326():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = [var9, var13]
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_327():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '}<\\9w'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_328():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_329():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = -2789
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_330():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_331():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = [var21]
        var39 = module0.pkg_commit_hash(var38)
    except BaseException:
        pass


def test_case_332():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'T?c/23=n[q>L'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = b'q`\x80\xd1QL\xb5V\xbc\x14\xc2'
        var39 = {var25: var21, var19: var38}
        var40 = module0.pkg_commit_hash(var39)
    except BaseException:
        pass


def test_case_333():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = False
        var5 = {var1: var4}
        var6 = var4, var2, var5, var4
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_334():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_335():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = {var5, var15, var7, var11}
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_336():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = -2785.06
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_337():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = {var9: var11, var0: var10, var6: var13, var17: var1}
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_338():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_339():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = ()
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_340():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_341():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_342():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -1053
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_343():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_344():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_345():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = b'\xa6\xef\xf3V?'
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_346():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_347():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -847
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_348():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.pkg_info(var40)
    except BaseException:
        pass


def test_case_349():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = var20,
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_350():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_351():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = True
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_352():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = set()
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_353():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {var0, var1}
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_354():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_355():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {var0}
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_356():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_357():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = []
        var39 = module0.pkg_info(var38)
    except BaseException:
        pass


def test_case_358():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 594.00827
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_359():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_360():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_361():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'T?c/23=n[q>L'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_362():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_363():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 1432
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_364():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_365():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_366():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = -2085.48
        var13 = module0.pkg_commit_hash(var12)
    except BaseException:
        pass


def test_case_367():
    try:
        var0 = '[Vi\t\\(o'
        var1 = {var0, var0}
        var2 = b'"\xf8K\xcf'
        var3 = var0, var1, var2
        var4 = module0.pkg_info(var3)
    except BaseException:
        pass


def test_case_368():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'T?c/23=n[q>L'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'c:7;_skS{g='
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = b'\r\x05>\x96u\xb4\xb3:L\xd6\x94'
        var45 = module0.pkg_commit_hash(var44)
    except BaseException:
        pass


def test_case_369():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_370():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_371():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = {var31}
        var37 = module0.pkg_info(var36)
    except BaseException:
        pass


def test_case_372():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'T?c/23=n[q>L'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_373():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {var2, var3}
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_374():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = {var10: var7, var21: var15, var8: var0}
        var23 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_375():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 89
        var3 = [var1, var2, var2]
        var4 = module0.pkg_commit_hash(var3)
    except BaseException:
        pass


def test_case_376():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = b'#\xec\noDL\x97`\x7f_s\x99\xa4\xf0'
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_377():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_378():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_379():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = b'\xb7\x0c\xd0\xc3\x99\xd8\x92\x90\x8cM-\x94"'
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_380():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = 3625
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_381():
    try:
        var0 = "|'ZtC\x0b|O:Ks"
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_382():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_383():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '?}\x0c()y.'
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_384():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = ()
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_385():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -4857
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_386():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_387():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_388():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = -1737.6
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_389():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = b"\x1e\xdd::\xaa\xb4D\x1e\xa6\x9bX$]qL'j\xb2"
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_390():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -1813.557653
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_391():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = {}
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_392():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'T?c/23=n[q>L'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_393():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = [var15, var15, var6]
        var27 = module0.pkg_info(var26)
    except BaseException:
        pass


def test_case_394():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = {var6}
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_395():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_396():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = b'\\\xd2\xb0\xa7\xa0\xa5\x93I\x19'
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_397():
    try:
        var0 = -606.0
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_398():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = []
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_399():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = {var20: var5}
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_400():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'c:7;_skS{g='
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'T?c/23=n[q>L'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_401():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_402():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = b'q>0\xbf\xf6r\xc4\xc4\xf1Maa\xf2\x12\xfel'
        var27 = module0.pkg_commit_hash(var26)
    except BaseException:
        pass


def test_case_403():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_404():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_405():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_406():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 779.0
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_407():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_408():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = None
        var38 = 503
        var39 = {var16, var38, var16}
        var40 = b'\xfaAy\xaaq\xcd4k\xbf\x0b\xe0/\xd0'
        var41 = var37, var37, var39, var40
        var42 = var0, var36, var41
        var43 = module0.pkg_commit_hash(var42)
    except BaseException:
        pass


def test_case_409():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_410():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_411():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_412():
    try:
        var0 = False
        var1 = {var0}
        var2 = [var1, var0]
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_413():
    try:
        var0 = False
        var1 = {var0}
        var2 = {var1: var0}
    except BaseException:
        pass


def test_case_414():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'T?c/23=n[q>L'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = {}
        var41 = module0.pkg_commit_hash(var40)
    except BaseException:
        pass


def test_case_415():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = var40,
        var42 = module0.pkg_commit_hash(var41)
    except BaseException:
        pass


def test_case_416():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'c:7;_skS{g='
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = set()
        var43 = module0.pkg_commit_hash(var42)
    except BaseException:
        pass


def test_case_417():
    try:
        var0 = True
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_418():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = b'rf\xdf\xc98\xa3H\xf8\x08\x08\x15\xdb\x8eaIh\x83\xd8'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_419():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = []
        var5 = {}
        var6 = None
        var7 = var6,
        var8 = var4, var5, var7, var2
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_420():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_421():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = {var2: var1, var4: var4, var7: var1, var2: var7}
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_422():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = [var1]
        var31 = module0.pkg_commit_hash(var30)
    except BaseException:
        pass


def test_case_423():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_424():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = []
        var35 = module0.pkg_info(var34)
    except BaseException:
        pass


def test_case_425():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = []
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_426():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '}<\\9w'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_427():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = False
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_428():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '='
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_429():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = -1931
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_430():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_431():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_432():
    try:
        var0 = -2161.0
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_433():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'c:7;_skS{g='
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_434():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = [var7, var16, var1]
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_435():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = True
        var45 = module0.pkg_commit_hash(var44)
    except BaseException:
        pass


def test_case_436():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = False
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_437():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'T?c/23=n[q>L'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.pkg_info(var38)
    except BaseException:
        pass


def test_case_438():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_439():
    try:
        var0 = b'\x01\xd9X\xa4'
        var1 = {var0, var0}
        var2 = {var1}
    except BaseException:
        pass


def test_case_440():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_441():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 7
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_442():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_443():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'TdR~\rO\\=hu-oHvm2Z'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'T?c/23=n[q>L'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_444():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_445():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 1720.0
        var17 = {var5: var11, var16: var13, var12: var11}
        var18 = module0.pkg_commit_hash(var17)
    except BaseException:
        pass


def test_case_446():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_447():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'TdR~\rO\\=hu-oHvm2Z'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = {var13: var9, var4: var26, var21: var23, var9: var3}
        var28 = 'domain'
        var29 = var27, var12, var28
        var30 = [var29, var20, var26]
        var31 = {var0: var29, var25: var30, var21: var22, var17: var25}
        var32 = {var18: var19, var11: var31}
        var33 = var32, var29, var18
        var34 = module0.pkg_info(var33)
    except BaseException:
        pass


def test_case_448():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_449():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'TdR~\rO\\=hu-oHvm2Z'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = {var20, var12, var11}
        var28 = var6, var8, var26, var27
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_450():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 2298
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_451():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_452():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'TdR~\rO\\=hu-oHvm2Z'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_453():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'yRh( \n'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_454():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'yRh( \n'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'TdR~\rO\\=hu-oHvm2Z'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = {var21, var43, var37}
        var47 = module0.pkg_info(var46)
    except BaseException:
        pass


def test_case_455():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'TdR~\rO\\=hu-oHvm2Z'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = {var17: var12, var26: var32}
        var43 = b' \x8b]\xd7\x90\xfe\xc6B\x04l\x8a'
        var44 = var42, var43
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_456():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {var6, var4, var9, var8}
        var11 = var10, var0
        var12 = module0.pkg_info(var11)
    except BaseException:
        pass


def test_case_457():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = '}<\\9w'
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = 'yRh( \n'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = -310
        var49 = module0.pkg_info(var48)
    except BaseException:
        pass


def test_case_458():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = {var3}
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_459():
    try:
        var0 = -859.64125
        var1 = {var0, var0, var0}
        var2 = var1, var1
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_460():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'TdR~\rO\\=hu-oHvm2Z'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_461():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_462():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'c:7;_skS{g='
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = set()
        var45 = module0.pkg_commit_hash(var44)
    except BaseException:
        pass


def test_case_463():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'TdR~\rO\\=hu-oHvm2Z'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'yRh( \n'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_464():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = -2594
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_465():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_466():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = {var3}
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_467():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'x='
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_468():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'yRh( \n'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'T?c/23=n[q>L'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_469():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_470():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var4, var19, var0}
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_471():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'DkC\'CrD}n?\\"bR \'z%6'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = ()
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_472():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_473():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_474():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {var3: var2, var5: var2}
        var7 = module0.pkg_commit_hash(var6)
    except BaseException:
        pass


def test_case_475():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_476():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'yRh( \n'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_477():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'yRh( \n'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = {var20, var18}
        var23 = module0.pkg_commit_hash(var22)
    except BaseException:
        pass


def test_case_478():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_479():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_480():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = b'\xfd\x83\xdf1\xa3}\xda\xbc$\xd5\x9b\xa9a\xf5\x82'
        var17 = module0.pkg_info(var16)
    except BaseException:
        pass


def test_case_481():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = []
        var23 = True
        var24 = var22, var23, var23
        var25 = b'\x1c\x97\x17\xaf_\xd9\x0e\xe1\xc9\xfa\x83\xb5;\xf8'
        var26 = var6, var24, var25
        var27 = module0.pkg_commit_hash(var26)
    except BaseException:
        pass


def test_case_482():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'T?c/23=n[q>L'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'c:7;_skS{g='
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'DkC\'CrD}n?\\"bR \'z%6'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_483():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_484():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = True
        var9 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_485():
    try:
        var0 = b'\x82\x9d \xff`R\xcc\x91#\x8e\xe6G\xcf\xf4\x99\x0c\xe3\xd2\xd7'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_486():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = {var3}
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_487():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {}
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_488():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'TdR~\rO\\=hu-oHvm2Z'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_489():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'DkC\'CrD}n?\\"bR \'z%6'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'c:7;_skS{g='
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_490():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'TdR~\rO\\=hu-oHvm2Z'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'yRh( \n'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = 'h\n%M~\tL4qVg;4qu'
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_491():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'TdR~\rO\\=hu-oHvm2Z'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_492():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'yRh( \n'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 15
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_493():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_494():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_495():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_496():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 1620.0
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_497():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '}<\\9w'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_498():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = b''
        var15 = var14,
        var16 = module0.pkg_commit_hash(var15)
    except BaseException:
        pass


def test_case_499():
    try:
        var0 = 2121
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_500():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = {var3}
        var39 = module0.pkg_commit_hash(var38)
    except BaseException:
        pass


def test_case_501():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 3060.1
        var23 = [var12, var22, var6, var21]
        var24 = module0.pkg_info(var23)
    except BaseException:
        pass


def test_case_502():
    try:
        var0 = set()
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_503():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '#,>\\n{Wo-JZrZ%HEN;F'
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_504():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = b"\xa5\xda\x9f\ti[\xff\x14'\x8d\xebg"
        var27 = var26,
        var28 = module0.pkg_commit_hash(var27)
    except BaseException:
        pass


def test_case_505():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'c:7;_skS{g='
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_506():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = -2161
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_507():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'T?c/23=n[q>L'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = '}<\\9w'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = 'yRh( \n'
        var49 = module0.pkg_commit_hash(var48)
        assert var49 is not None
        var50 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_508():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'yRh( \n'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 365
        var27 = var26,
        var28 = module0.pkg_info(var27)
    except BaseException:
        pass


def test_case_509():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'T?c/23=n[q>L'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_510():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_511():
    try:
        var0 = 1496
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_512():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_513():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'yRh( \n'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = b"'\x11\x1b"
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_514():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_515():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'T?c/23=n[q>L'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = -871.9785
        var29 = 592.6
        var30 = var28, var14, var29
        var31 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_516():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = -2303
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_517():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'c:7;_skS{g='
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_518():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'TdR~\rO\\=hu-oHvm2Z'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_519():
    try:
        var0 = b'@\xf5\xb0\x92\x17\xc3\xcc\xf2\xd3\xe4\xdc\x18'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_520():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_521():
    try:
        var0 = b'\x0c\x1d{\xb3p\xcd\x0ewv\xf5c \xe4)9\xe4\x0b\xc9'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_522():
    try:
        var0 = b'\xe5\xc3hB\x02V\x82&\xe5\x8c\x05\xc6\xc4\xf4\xf5,"\xca?\x9f'
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_523():
    try:
        var0 = b'S\tR\x87\xebN\xfe\x08\x8f'
        var1 = {var0}
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_524():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_commit_hash(var6)
        assert var10 is not None
        var11 = 'DkC\'CrD}n?\\"bR \'z%6'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = None
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_info(var17)
    except BaseException:
        pass


def test_case_525():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'DkC\'CrD}n?\\"bR \'z%6'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'TdR~\rO\\=hu-oHvm2Z'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = [var13]
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_526():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 969.65
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_527():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'TdR~\rO\\=hu-oHvm2Z'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_528():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.pkg_commit_hash(var16)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = b'\xa6\xfc\xa2\x13\x93M\xea\xaf\xc9\xd1,\xdbE2\x8a\xf8\xcf'
        var24 = module0.pkg_commit_hash(var23)
    except BaseException:
        pass


def test_case_529():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'DkC\'CrD}n?\\"bR \'z%6'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_530():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'T?c/23=n[q>L'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_531():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'TdR~\rO\\=hu-oHvm2Z'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_532():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_commit_hash(var2)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'TdR~\rO\\=hu-oHvm2Z'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'AD>9K}f/jF_O(>rWHj'
        var16 = module0.pkg_info(var15)
    except BaseException:
        pass


def test_case_533():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = None
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = '}<\\9w'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'yRh( \n'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = '}<\\9w'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_534():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.pkg_commit_hash(var14)
        assert var18 is not None
        var19 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_535():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '^'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = {var5, var0}
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_536():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = {var9: var3, var1: var3, var6: var10}
        var12 = module0.pkg_commit_hash(var11)
    except BaseException:
        pass


def test_case_537():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_538():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = '^'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'h\n%M~\tL4qVg;4qu'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = '}<\\9w'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'yRh( \n'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = {var9}
        var26 = module0.pkg_info(var25)
    except BaseException:
        pass


def test_case_539():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 1216
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_540():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = b'\r\x11X\x9f\t\xb2\x0b'
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_541():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = -1536.5
        var11 = module0.pkg_commit_hash(var10)
    except BaseException:
        pass


def test_case_542():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_543():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'yRh( \n'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_544():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.pkg_commit_hash(var34)
        assert var38 is not None
        var39 = b'l\xfeG\xb8'
        var40 = module0.pkg_commit_hash(var39)
    except BaseException:
        pass


def test_case_545():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '^'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'DkC\'CrD}n?\\"bR \'z%6'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '&>EvDvM[_'
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_546():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.pkg_commit_hash(var16)
        assert var20 is not None
        var21 = False
        var22 = module0.pkg_info(var21)
    except BaseException:
        pass


def test_case_547():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.pkg_commit_hash(var16)
        assert var20 is not None
        var21 = {var5: var16}
        var22 = module0.pkg_commit_hash(var21)
    except BaseException:
        pass


def test_case_548():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'yRh( \n'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'c:7;_skS{g='
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.pkg_commit_hash(var34)
        assert var38 is not None
        var39 = '^'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = 492
        var42 = module0.pkg_commit_hash(var41)
    except BaseException:
        pass


def test_case_549():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'c:7;_skS{g='
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'T?c/23=n[q>L'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_550():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '^'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_551():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = False
        var5 = 'ci\x0ca\\EoF,H O$($l&p'
        var6 = [var4, var3, var4, var5]
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_552():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'mf\'"P^\t\\}'
        var9 = {var7: var8, var2: var2}
        var10 = module0.pkg_info(var9)
    except BaseException:
        pass


def test_case_553():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 503
        var14 = module0.pkg_commit_hash(var13)
    except BaseException:
        pass


def test_case_554():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'yRh( \n'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'T?c/23=n[q>L'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = [var26, var31, var12, var12]
        var41 = module0.pkg_commit_hash(var40)
    except BaseException:
        pass


def test_case_555():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.pkg_commit_hash(var30)
        assert var34 is not None
        var35 = None
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'T?c/23=n[q>L'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_556():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_557():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'yRh( \n'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = {}
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_558():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'T?c/23=n[q>L'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'DkC\'CrD}n?\\"bR \'z%6'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_559():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_560():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 1535.146
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_561():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_562():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = 'TdR~\rO\\=hu-oHvm2Z'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_563():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'DkC\'CrD}n?\\"bR \'z%6'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'DkC\'CrD}n?\\"bR \'z%6'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'c:7;_skS{g='
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_564():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'T?c/23=n[q>L'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_565():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 2642
        var11 = var10,
        var12 = module0.pkg_commit_hash(var11)
    except BaseException:
        pass


def test_case_566():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.pkg_commit_hash(var22)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_567():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_568():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = b'/!\x8f\xd8\x87\xce`\xfba$\x9f\xdf\xd6X'
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_569():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'T?c/23=n[q>L'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 's0_-bRs5%'
        var33 = [var32, var19, var4, var21]
        var34 = module0.pkg_info(var33)
    except BaseException:
        pass


def test_case_570():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '^'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'yRh( \n'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = False
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_571():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'DkC\'CrD}n?\\"bR \'z%6'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'c:7;_skS{g='
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'TdR~\rO\\=hu-oHvm2Z'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_572():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '^'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'DkC\'CrD}n?\\"bR \'z%6'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_573():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'TdR~\rO\\=hu-oHvm2Z'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = -847
        var37 = module0.pkg_commit_hash(var36)
    except BaseException:
        pass


def test_case_574():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'yRh( \n'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '^'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '}<\\9w'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_575():
    try:
        var0 = None
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_576():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = None
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = '^'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_577():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_578():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var13: var10, var19: var12}
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_579():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.pkg_commit_hash(var16)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'DkC\'CrD}n?\\"bR \'z%6'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_580():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {var0: var0, var0: var0}
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_581():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.pkg_commit_hash(var22)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = b'u\x8a'
        var36 = module0.pkg_commit_hash(var35)
    except BaseException:
        pass


def test_case_582():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'T?c/23=n[q>L'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'DkC\'CrD}n?\\"bR \'z%6'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_583():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.pkg_commit_hash(var24)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'h\n%M~\tL4qVg;4qu'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = '}<\\9w'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'yRh( \n'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'T?c/23=n[q>L'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = 'h\n%M~\tL4qVg;4qu'
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var46 = module0.pkg_commit_hash(var45)
        assert var46 is not None
        var47 = None
        var48 = module0.pkg_commit_hash(var47)
        assert var48 is not None
        var49 = False
        var50 = module0.pkg_info(var49)
    except BaseException:
        pass


def test_case_584():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'cr{RW:\r3yhOYxq'
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_585():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'yRh( \n'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_586():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = "UE8kpP'M`9C\r(#z"
        var3 = None
        var4 = var2, var3
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_587():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_commit_hash(var2)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = module0.pkg_info(var7)
    except BaseException:
        pass


def test_case_588():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = [var1, var2, var5, var10]
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_589():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = b'k(I\xf4\x1c%\xfb\xef\xfd9\x01\xab\x9b\xb7B\xc2\x92\xaf\x9b'
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_590():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'h\n%M~\tL4qVg;4qu'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = None
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = '}<\\9w'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'yRh( \n'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'DkC\'CrD}n?\\"bR \'z%6'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_591():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = ''
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_592():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_commit_hash(var2)
        assert var6 is not None
        var7 = None
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = '}<\\9w'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'yRh( \n'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'DkC\'CrD}n?\\"bR \'z%6'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'c:7;_skS{g='
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = -101
        var26 = module0.pkg_commit_hash(var25)
    except BaseException:
        pass


def test_case_593():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'TdR~\rO\\=hu-oHvm2Z'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'c:7;_skS{g='
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'T?c/23=n[q>L'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = '^'
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = b'\x05=\xdcI\xec\xfd\x1c2#\x85\xdc\x99P'
        var47 = module0.pkg_commit_hash(var46)
    except BaseException:
        pass


def test_case_594():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'T?c/23=n[q>L'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'TdR~\rO\\=hu-oHvm2Z'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = '^'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'DkC\'CrD}n?\\"bR \'z%6'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = '}<\\9w'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'yRh( \n'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_595():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_596():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = None
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'T?c/23=n[q>L'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_597():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = None
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'TdR~\rO\\=hu-oHvm2Z'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'h\n%M~\tL4qVg;4qu'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'DkC\'CrD}n?\\"bR \'z%6'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = None
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = None
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = -1852
        var44 = module0.pkg_commit_hash(var43)
    except BaseException:
        pass


def test_case_598():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.pkg_commit_hash(var14)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = '}<\\9w'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'yRh( \n'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'DkC\'CrD}n?\\"bR \'z%6'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'DkC\'CrD}n?\\"bR \'z%6'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = None
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = 'h\n%M~\tL4qVg;4qu'
        var46 = module0.pkg_commit_hash(var45)
        assert var46 is not None
        var47 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var48 = module0.pkg_commit_hash(var47)
        assert var48 is not None
        var49 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_599():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.pkg_commit_hash(var14)
        assert var18 is not None
        var19 = -1283.572
        var20 = module0.pkg_info(var19)
    except BaseException:
        pass


def test_case_600():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_601():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_602():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_603():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 3565.4
        var6 = module0.pkg_commit_hash(var5)
    except BaseException:
        pass


def test_case_604():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = module0.pkg_commit_hash(var32)
        assert var36 is not None
        var37 = 'h\n%M~\tL4qVg;4qu'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'h\n%M~\tL4qVg;4qu'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = None
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_605():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_606():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = var8,
        var10 = module0.pkg_commit_hash(var9)
    except BaseException:
        pass


def test_case_607():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = b'\xc4\x9az2'
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_608():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = '^'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'h\n%M~\tL4qVg;4qu'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_609():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_610():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = [var5]
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_611():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_612():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_613():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'yRh( \n'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = b'\x95\x05\xabtq\xb9'
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_614():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'TdR~\rO\\=hu-oHvm2Z'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = '^'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 1493
        var36 = module0.pkg_info(var35)
    except BaseException:
        pass


def test_case_615():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '^'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'DkC\'CrD}n?\\"bR \'z%6'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = 0.01
        var47 = module0.pkg_commit_hash(var46)
    except BaseException:
        pass


def test_case_616():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'T?c/23=n[q>L'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '^'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'DkC\'CrD}n?\\"bR \'z%6'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = True
        var45 = module0.pkg_commit_hash(var44)
    except BaseException:
        pass


def test_case_617():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'yRh( \n'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = None
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = 'TdR~\rO\\=hu-oHvm2Z'
        var49 = module0.pkg_commit_hash(var48)
        assert var49 is not None
        var50 = None
        var51 = module0.pkg_commit_hash(var50)
        assert var51 is not None
        var52 = 'T?c/23=n[q>L'
        var53 = module0.pkg_commit_hash(var52)
        assert var53 is not None
        var54 = {}
        var55 = module0.pkg_info(var54)
    except BaseException:
        pass


def test_case_618():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_commit_hash(var6)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = '}<\\9w'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'yRh( \n'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_619():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = {var5, var5, var4}
        var19 = module0.pkg_commit_hash(var18)
    except BaseException:
        pass


def test_case_620():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_621():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 1202.1
        var17 = {var5: var15, var16: var3, var0: var5}
        var18 = module0.pkg_info(var17)
    except BaseException:
        pass


def test_case_622():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'yRh( \n'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = []
        var27 = {}
        var28 = {var26: var18, var27: var15}
    except BaseException:
        pass


def test_case_623():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'llr_4\tFxRAk@V&V|V-'
        var21 = var20, var16, var16
        var22 = module0.pkg_info(var21)
    except BaseException:
        pass


def test_case_624():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'DkC\'CrD}n?\\"bR \'z%6'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '^'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_625():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'yRh( \n'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 522.6
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_626():
    try:
        var0 = b'\xd6F7*\xec\xe7\x99\xd1\n\x8c'
        var1 = True
        var2 = {var0: var0, var0: var1, var0: var0, var1: var0}
        var3 = {var2: var1, var1: var2}
    except BaseException:
        pass


def test_case_627():
    try:
        var0 = 1541
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_628():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'c:7;_skS{g='
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_629():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = ''
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_630():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -1816
        var25 = module0.pkg_info(var24)
    except BaseException:
        pass


def test_case_631():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'c:7;_skS{g='
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 888.65
        var35 = module0.pkg_info(var34)
    except BaseException:
        pass


def test_case_632():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_633():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_634():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_635():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'DkC\'CrD}n?\\"bR \'z%6'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.pkg_commit_hash(var12)
        assert var16 is not None
        var17 = -327.372
        var18 = module0.pkg_commit_hash(var17)
    except BaseException:
        pass


def test_case_636():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '^'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_637():
    try:
        var0 = False
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_638():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'T?c/23=n[q>L'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'DkC\'CrD}n?\\"bR \'z%6'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_639():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = None
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = '}<\\9w'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'yRh( \n'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_640():
    try:
        var0 = 'M\x0cg7mP'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_641():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '^'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'c:7;_skS{g='
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = [var24]
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_642():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_643():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = None
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 1556
        var8 = module0.pkg_commit_hash(var7)
    except BaseException:
        pass


def test_case_644():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '}<\\9w'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -530.584653
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_645():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_646():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '^'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_647():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 204
        var13 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_648():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'DkC\'CrD}n?\\"bR \'z%6'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'T?c/23=n[q>L'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = {}
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_649():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.pkg_commit_hash(var12)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 3696
        var22 = module0.pkg_info(var21)
    except BaseException:
        pass


def test_case_650():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '^'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '}<\\9w'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'DkC\'CrD}n?\\"bR \'z%6'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = 'c:7;_skS{g='
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = 'T?c/23=n[q>L'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = None
        var49 = module0.pkg_commit_hash(var48)
        assert var49 is not None
        var50 = module0.pkg_info(var30)
    except BaseException:
        pass


def test_case_651():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_652():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'DkC\'CrD}n?\\"bR \'z%6'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'yRh( \n'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'DkC\'CrD}n?\\"bR \'z%6'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 1556
        var41 = module0.pkg_commit_hash(var40)
    except BaseException:
        pass


def test_case_653():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = '}<\\9w'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'TdR~\rO\\=hu-oHvm2Z'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = b'TW\xe5}\xdbu$\x05d\xc6\xa5IM\xc0i\xf7'
        var28 = module0.pkg_commit_hash(var27)
    except BaseException:
        pass


def test_case_654():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'T?c/23=n[q>L'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = '}<\\9w'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'yRh( \n'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'DkC\'CrD}n?\\"bR \'z%6'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'DkC\'CrD}n?\\"bR \'z%6'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'h\n%M~\tL4qVg;4qu'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'h\n%M~\tL4qVg;4qu'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = None
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = 'K&\tzP*Ks=705'
        var46 = module0.pkg_info(var45)
    except BaseException:
        pass


def test_case_655():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '^'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'DkC\'CrD}n?\\"bR \'z%6'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_656():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = b'xG\x0e\xceN\xa0\x0cd\xd0.:\x13\xfdl'
        var16 = module0.pkg_commit_hash(var15)
    except BaseException:
        pass


def test_case_657():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'c:7;_skS{g='
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = '}<\\9w'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_658():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = '"ZZgSkaTFN~2,\\ZU'
        var33 = -272
        var34 = None
        var35 = var32, var33, var34, var33
        var36 = module0.pkg_info(var35)
    except BaseException:
        pass


def test_case_659():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '}<\\9w'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'yRh( \n'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'TdR~\rO\\=hu-oHvm2Z'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = None
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = 'h\n%M~\tL4qVg;4qu'
        var49 = module0.pkg_commit_hash(var48)
        assert var49 is not None
        var50 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var51 = module0.pkg_commit_hash(var50)
        assert var51 is not None
        var52 = '9rrmOg(m/xui'
        var53 = module0.pkg_info(var52)
    except BaseException:
        pass


def test_case_660():
    try:
        var0 = 133.36962
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_661():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.pkg_commit_hash(var22)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'DkC\'CrD}n?\\"bR \'z%6'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'h\n%M~\tL4qVg;4qu'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = '}<\\9w'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'yRh( \n'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = None
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = module0.pkg_info(var31)
    except BaseException:
        pass


def test_case_662():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_commit_hash(var2)
        assert var6 is not None
        var7 = 'DkC\'CrD}n?\\"bR \'z%6'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'DkC\'CrD}n?\\"bR \'z%6'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'c:7;_skS{g='
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_663():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = True
        var15 = module0.pkg_commit_hash(var14)
    except BaseException:
        pass


def test_case_664():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'T?c/23=n[q>L'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'yRh( \n'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'h\n%M~\tL4qVg;4qu'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = None
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = set()
        var45 = module0.pkg_commit_hash(var44)
    except BaseException:
        pass


def test_case_665():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'DkC\'CrD}n?\\"bR \'z%6'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_666():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = {var7}
        var15 = module0.pkg_info(var14)
    except BaseException:
        pass


def test_case_667():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'DkC\'CrD}n?\\"bR \'z%6'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.pkg_commit_hash(var28)
        assert var32 is not None
        var33 = 'h\n%M~\tL4qVg;4qu'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_668():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_669():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_commit_hash(var6)
        assert var10 is not None
        var11 = 'h\n%M~\tL4qVg;4qu'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = None
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'TdR~\rO\\=hu-oHvm2Z'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = '}<\\9w'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_670():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '^'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_671():
    try:
        var0 = ';\r>'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_672():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = b'\xde'
        var27 = {var23: var0, var18: var14, var19: var11, var21: var26}
        var28 = module0.pkg_commit_hash(var27)
    except BaseException:
        pass


def test_case_673():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = 'T?c/23=n[q>L'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_674():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'c:7;_skS{g='
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = '^'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'h\n%M~\tL4qVg;4qu'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'h\n%M~\tL4qVg;4qu'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = -2387.413
        var32 = module0.pkg_info(var31)
    except BaseException:
        pass


def test_case_675():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = '}<\\9w'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'yRh( \n'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 'h\n%M~\tL4qVg;4qu'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'T?c/23=n[q>L'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'TdR~\rO\\=hu-oHvm2Z'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'h\n%M~\tL4qVg;4qu'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_676():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = {var3, var2, var1, var1}
        var5 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_677():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'TdR~\rO\\=hu-oHvm2Z'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'c:7;_skS{g='
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = [var3, var28]
        var45 = module0.pkg_info(var44)
    except BaseException:
        pass


def test_case_678():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'TdR~\rO\\=hu-oHvm2Z'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'DkC\'CrD}n?\\"bR \'z%6'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'DkC\'CrD}n?\\"bR \'z%6'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_679():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '}<\\9w'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'yRh( \n'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '^'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = {var18, var18}
        var21 = module0.pkg_info(var20)
    except BaseException:
        pass


def test_case_680():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'DkC\'CrD}n?\\"bR \'z%6'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '^'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_681():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_682():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'TdR~\rO\\=hu-oHvm2Z'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'yRh( \n'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = '^'
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_683():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.pkg_commit_hash(var18)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = module0.pkg_info(var12)
    except BaseException:
        pass


def test_case_684():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_685():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'TdR~\rO\\=hu-oHvm2Z'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'DkC\'CrD}n?\\"bR \'z%6'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = None
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'h\n%M~\tL4qVg;4qu'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'c:7;_skS{g='
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'h\n%M~\tL4qVg;4qu'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'h\n%M~\tL4qVg;4qu'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = None
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_686():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'TdR~\rO\\=hu-oHvm2Z'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_687():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'c:7;_skS{g='
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '}<\\9w'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'yRh( \n'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'DkC\'CrD}n?\\"bR \'z%6'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = {var20, var2}
        var33 = var32,
        var34 = module0.pkg_info(var33)
    except BaseException:
        pass


def test_case_688():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = b'o\xc0R\x1cd,\x85!k\xb7\xbf\xef\x17'
        var3 = {var1: var1, var0: var0, var2: var2}
        var4 = module0.pkg_info(var3)
    except BaseException:
        pass


def test_case_689():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'c:7;_skS{g='
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = -1144
        var21 = module0.pkg_commit_hash(var20)
    except BaseException:
        pass


def test_case_690():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_691():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_692():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = None
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = '}<\\9w'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'yRh( \n'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = -1410
        var16 = module0.pkg_info(var15)
    except BaseException:
        pass


def test_case_693():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = set()
        var7 = 831.39
        var8 = []
        var9 = var6, var7, var8
        var10 = module0.pkg_info(var9)
    except BaseException:
        pass


def test_case_694():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_695():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = module0.pkg_commit_hash(var12)
        assert var16 is not None
        var17 = 'h\n%M~\tL4qVg;4qu'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = '}<\\9w'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'c:7;_skS{g='
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = None
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = -800
        var38 = module0.pkg_commit_hash(var37)
    except BaseException:
        pass


def test_case_696():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {var4: var2}
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_697():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'DkC\'CrD}n?\\"bR \'z%6'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'c:7;_skS{g='
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '^'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = '}<\\9w'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'DkC\'CrD}n?\\"bR \'z%6'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = 'T?c/23=n[q>L'
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = [var30, var4]
        var47 = module0.pkg_commit_hash(var46)
    except BaseException:
        pass


def test_case_698():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = -1115
        var25 = module0.pkg_commit_hash(var24)
    except BaseException:
        pass


def test_case_699():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = {var0}
        var3 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_700():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'h\n%M~\tL4qVg;4qu'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'c:7;_skS{g='
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = 842
        var20 = module0.pkg_info(var19)
    except BaseException:
        pass


def test_case_701():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = -3335.397944
        var17 = module0.pkg_commit_hash(var16)
    except BaseException:
        pass


def test_case_702():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'yRh( \n'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_703():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'TdR~\rO\\=hu-oHvm2Z'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '^'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = module0.pkg_commit_hash(var22)
        assert var26 is not None
        var27 = 'T?c/23=n[q>L'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'h\n%M~\tL4qVg;4qu'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'h\n%M~\tL4qVg;4qu'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'h\n%M~\tL4qVg;4qu'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = -2862.77731
        var44 = module0.pkg_info(var43)
    except BaseException:
        pass


def test_case_704():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = '^'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'yRh( \n'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'h\n%M~\tL4qVg;4qu'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '}<\\9w'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = 'c:7;_skS{g='
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = None
        var49 = module0.pkg_commit_hash(var48)
        assert var49 is not None
        var50 = None
        var51 = module0.pkg_commit_hash(var50)
        assert var51 is not None
        var52 = module0.pkg_commit_hash(var48)
        assert var52 is not None
        var53 = set()
        var54 = module0.pkg_commit_hash(var53)
    except BaseException:
        pass


def test_case_705():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = module0.pkg_info(var2)
    except BaseException:
        pass


def test_case_706():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '^'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'h\n%M~\tL4qVg;4qu'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.pkg_commit_hash(var20)
        assert var24 is not None
        var25 = 'h\n%M~\tL4qVg;4qu'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = b'\xd5'
        var32 = module0.pkg_commit_hash(var31)
    except BaseException:
        pass


def test_case_707():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'T?c/23=n[q>L'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'c:7;_skS{g='
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'DkC\'CrD}n?\\"bR \'z%6'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = 'DkC\'CrD}n?\\"bR \'z%6'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = None
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = module0.pkg_info(var8)
    except BaseException:
        pass


def test_case_708():
    try:
        var0 = 'Exception restarting kernel'
        var1 = {var0: var0, var0: var0, var0: var0, var0: var0}
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_709():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'T?c/23=n[q>L'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '^'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = 'h\n%M~\tL4qVg;4qu'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'c:7;_skS{g='
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'h\n%M~\tL4qVg;4qu'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = None
        var45 = module0.pkg_commit_hash(var44)
        assert var45 is not None
        var46 = '}<\\9w'
        var47 = module0.pkg_commit_hash(var46)
        assert var47 is not None
        var48 = [var31, var7, var12, var14]
        var49 = module0.pkg_info(var48)
    except BaseException:
        pass


def test_case_710():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '}<\\9w'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'yRh( \n'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'DkC\'CrD}n?\\"bR \'z%6'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = '^'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'P'
        var23 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_711():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'T?c/23=n[q>L'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = '}<\\9w'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_712():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_713():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = '}<\\9w'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'yRh( \n'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = -1229
        var29 = module0.pkg_commit_hash(var28)
    except BaseException:
        pass


def test_case_714():
    try:
        var0 = 'T?c/23=n[q>L'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.pkg_commit_hash(var2)
        assert var6 is not None
        var7 = 'h\n%M~\tL4qVg;4qu'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'c:7;_skS{g='
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = None
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = None
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = '^'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = -755
        var18 = module0.pkg_info(var17)
    except BaseException:
        pass


def test_case_715():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'DkC\'CrD}n?\\"bR \'z%6'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_716():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = module0.pkg_commit_hash(var8)
        assert var12 is not None
        var13 = 'DkC\'CrD}n?\\"bR \'z%6'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'c:7;_skS{g='
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'h\n%M~\tL4qVg;4qu'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'TdR~\rO\\=hu-oHvm2Z'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = 'h\n%M~\tL4qVg;4qu'
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'c:7;_skS{g='
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = None
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = 'T?c/23=n[q>L'
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_717():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = '}<\\9w'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'yRh( \n'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = module0.pkg_commit_hash(var30)
        assert var34 is not None
        var35 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_718():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'yRh( \n'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'c:7;_skS{g='
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = b'\x01v\xca\x19\x0f\xf6\xc8\x11\x00\xbew\x89\xad'
        var19 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_719():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'TdR~\rO\\=hu-oHvm2Z'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = '}<\\9w'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'yRh( \n'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'DkC\'CrD}n?\\"bR \'z%6'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = None
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'h\n%M~\tL4qVg;4qu'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = 'h\n%M~\tL4qVg;4qu'
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var42 = module0.pkg_commit_hash(var41)
        assert var42 is not None
        var43 = None
        var44 = module0.pkg_commit_hash(var43)
        assert var44 is not None
        var45 = 'h\n%M~\tL4qVg;4qu'
        var46 = module0.pkg_commit_hash(var45)
        assert var46 is not None
        var47 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var48 = module0.pkg_commit_hash(var47)
        assert var48 is not None
        var49 = None
        var50 = module0.pkg_commit_hash(var49)
        assert var50 is not None
        var51 = '^'
        var52 = module0.pkg_commit_hash(var51)
        assert var52 is not None
        var53 = module0.pkg_info(var19)
    except BaseException:
        pass


def test_case_720():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'DkC\'CrD}n?\\"bR \'z%6'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'T?c/23=n[q>L'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = True
        var21 = {var10, var16, var20, var7}
        var22 = module0.pkg_info(var21)
    except BaseException:
        pass


def test_case_721():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 1289.894883
        var9 = module0.pkg_commit_hash(var8)
    except BaseException:
        pass


def test_case_722():
    try:
        var0 = 'DkC\'CrD}n?\\"bR \'z%6'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_723():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = [var1, var11]
        var15 = [var9, var14, var0, var14]
        var16 = module0.pkg_commit_hash(var15)
    except BaseException:
        pass


def test_case_724():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'h\n%M~\tL4qVg;4qu'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'TdR~\rO\\=hu-oHvm2Z'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'DkC\'CrD}n?\\"bR \'z%6'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'T?c/23=n[q>L'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'DkC\'CrD}n?\\"bR \'z%6'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = b'\x87\xc0'
        var35 = module0.pkg_commit_hash(var34)
    except BaseException:
        pass


def test_case_725():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'c:7;_skS{g='
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = None
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'DkC\'CrD}n?\\"bR \'z%6'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'DkC\'CrD}n?\\"bR \'z%6'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = module0.pkg_info(var18)
    except BaseException:
        pass


def test_case_726():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'T?c/23=n[q>L'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '^'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'TdR~\rO\\=hu-oHvm2Z'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'c:7;_skS{g='
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = module0.pkg_commit_hash(var20)
        assert var24 is not None
        var25 = 'DkC\'CrD}n?\\"bR \'z%6'
        var26 = module0.pkg_info(var25)
    except BaseException:
        pass


def test_case_727():
    try:
        var0 = 335
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_728():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'c:7;_skS{g='
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = '^'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'RjtiN{'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'c:7;_skS{g='
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = None
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = 'TdR~\rO\\=hu-oHvm2Z'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = 'h\n%M~\tL4qVg;4qu'
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var43 = module0.pkg_commit_hash(var42)
        assert var43 is not None
        var44 = module0.pkg_info(var34)
    except BaseException:
        pass


def test_case_729():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = module0.pkg_commit_hash(var10)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = 'DkC\'CrD}n?\\"bR \'z%6'
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_730():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_731():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'h\n%M~\tL4qVg;4qu'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'c:7;_skS{g='
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'DkC\'CrD}n?\\"bR \'z%6'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = 'h\n%M~\tL4qVg;4qu'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = None
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = '}<\\9w'
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = [var31, var9, var10]
        var37 = module0.pkg_commit_hash(var36)
    except BaseException:
        pass


def test_case_732():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'h\n%M~\tL4qVg;4qu'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = '^'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = None
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = None
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'RjtiN{'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = 'h\n%M~\tL4qVg;4qu'
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = None
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = '}<\\9w'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = None
        var34 = module0.pkg_info(var33)
    except BaseException:
        pass


def test_case_733():
    try:
        var0 = b'}c\xd4J\xa7\x02(Z\xe6\xf6\x86\xe9NM\xc5DQ\xc7'
        var1 = module0.pkg_info(var0)
    except BaseException:
        pass


def test_case_734():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = module0.pkg_commit_hash(var0)
        assert var4 is not None
        var5 = 'h\n%M~\tL4qVg;4qu'
        var6 = module0.pkg_commit_hash(var5)
        assert var6 is not None
        var7 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var8 = module0.pkg_commit_hash(var7)
        assert var8 is not None
        var9 = None
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'DkC\'CrD}n?\\"bR \'z%6'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = 'DkC\'CrD}n?\\"bR \'z%6'
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = None
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = None
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'h\n%M~\tL4qVg;4qu'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'h\n%M~\tL4qVg;4qu'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = {var4, var4}
        var30 = module0.pkg_commit_hash(var29)
    except BaseException:
        pass


def test_case_735():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '}<\\9w'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'yRh( \n'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'h\n%M~\tL4qVg;4qu'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'TdR~\rO\\=hu-oHvm2Z'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = "Oh'_"
        var23 = module0.pkg_info(var22)
    except BaseException:
        pass


def test_case_736():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = {var1}
        var7 = module0.pkg_info(var6)
    except BaseException:
        pass


def test_case_737():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'T?c/23=n[q>L'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = '^'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'RjtiN{'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'h\n%M~\tL4qVg;4qu'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = '}<\\9w'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'yRh( \n'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'h\n%M~\tL4qVg;4qu'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'h\n%M~\tL4qVg;4qu'
        var33 = module0.pkg_commit_hash(var32)
        assert var33 is not None
        var34 = None
        var35 = module0.pkg_commit_hash(var34)
        assert var35 is not None
        var36 = '}<\\9w'
        var37 = module0.pkg_commit_hash(var36)
        assert var37 is not None
        var38 = '^'
        var39 = module0.pkg_commit_hash(var38)
        assert var39 is not None
        var40 = None
        var41 = module0.pkg_commit_hash(var40)
        assert var41 is not None
        var42 = '+F^Df'
        var43 = module0.pkg_info(var42)
    except BaseException:
        pass


def test_case_738():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'DkC\'CrD}n?\\"bR \'z%6'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = '^'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'h\n%M~\tL4qVg;4qu'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = None
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = '}<\\9w'
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'h\n%M~\tL4qVg;4qu'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = None
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = None
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_739():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'TdR~\rO\\=hu-oHvm2Z'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.pkg_info(var4)
    except BaseException:
        pass


def test_case_740():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = '^'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = None
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = 'RjtiN{'
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = 'T?c/23=n[q>L'
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = 'c:7;_skS{g='
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = 'h\n%M~\tL4qVg;4qu'
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = None
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = '}<\\9w'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = 'yRh( \n'
        var29 = module0.pkg_commit_hash(var28)
        assert var29 is not None
        var30 = '^'
        var31 = module0.pkg_commit_hash(var30)
        assert var31 is not None
        var32 = 'p*c'
        var33 = module0.pkg_info(var32)
    except BaseException:
        pass


def test_case_741():
    try:
        var0 = '^'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = '}<\\9w'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = 'h\n%M~\tL4qVg;4qu'
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = 'h\n%M~\tL4qVg;4qu'
        var11 = module0.pkg_commit_hash(var10)
        assert var11 is not None
        var12 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var13 = module0.pkg_commit_hash(var12)
        assert var13 is not None
        var14 = None
        var15 = module0.pkg_commit_hash(var14)
        assert var15 is not None
        var16 = None
        var17 = module0.pkg_commit_hash(var16)
        assert var17 is not None
        var18 = 'h\n%M~\tL4qVg;4qu'
        var19 = module0.pkg_commit_hash(var18)
        assert var19 is not None
        var20 = None
        var21 = module0.pkg_commit_hash(var20)
        assert var21 is not None
        var22 = None
        var23 = module0.pkg_commit_hash(var22)
        assert var23 is not None
        var24 = 'TdR~\rO\\=hu-oHvm2Z'
        var25 = module0.pkg_commit_hash(var24)
        assert var25 is not None
        var26 = 'h\n%M~\tL4qVg;4qu'
        var27 = module0.pkg_commit_hash(var26)
        assert var27 is not None
        var28 = []
        var29 = module0.pkg_info(var28)
    except BaseException:
        pass


def test_case_742():
    try:
        var0 = None
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'h\n%M~\tL4qVg;4qu'
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'c:7;_skS{g='
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = 'Elsg8NzqnKZC}O\x0bE~=,u'
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = None
        var11 = module0.pkg_info(var10)
    except BaseException:
        pass


def test_case_743():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = 'c:7;_skS{g='
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = 'DkC\'CrD}n?\\"bR \'z%6'
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = None
        var9 = module0.pkg_commit_hash(var8)
        assert var9 is not None
        var10 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_744():
    try:
        var0 = 'h\n%M~\tL4qVg;4qu'
        var1 = module0.pkg_commit_hash(var0)
        assert var1 is not None
        var2 = None
        var3 = module0.pkg_commit_hash(var2)
        assert var3 is not None
        var4 = None
        var5 = module0.pkg_commit_hash(var4)
        assert var5 is not None
        var6 = None
        var7 = module0.pkg_commit_hash(var6)
        assert var7 is not None
        var8 = module0.pkg_commit_hash(var4)
        assert var8 is not None
        var9 = 'h\n%M~\tL4qVg;4qu'
        var10 = module0.pkg_commit_hash(var9)
        assert var10 is not None
        var11 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var12 = module0.pkg_commit_hash(var11)
        assert var12 is not None
        var13 = None
        var14 = module0.pkg_commit_hash(var13)
        assert var14 is not None
        var15 = 'h\n%M~\tL4qVg;4qu'
        var16 = module0.pkg_commit_hash(var15)
        assert var16 is not None
        var17 = None
        var18 = module0.pkg_commit_hash(var17)
        assert var18 is not None
        var19 = '}<\\9w'
        var20 = module0.pkg_commit_hash(var19)
        assert var20 is not None
        var21 = 'yRh( \n'
        var22 = module0.pkg_commit_hash(var21)
        assert var22 is not None
        var23 = 'DkC\'CrD}n?\\"bR \'z%6'
        var24 = module0.pkg_commit_hash(var23)
        assert var24 is not None
        var25 = None
        var26 = module0.pkg_commit_hash(var25)
        assert var26 is not None
        var27 = None
        var28 = module0.pkg_commit_hash(var27)
        assert var28 is not None
        var29 = 'h\n%M~\tL4qVg;4qu'
        var30 = module0.pkg_commit_hash(var29)
        assert var30 is not None
        var31 = 'h\n%M~\tL4qVg;4qu'
        var32 = module0.pkg_commit_hash(var31)
        assert var32 is not None
        var33 = 'R@QlA\rQwhy^7Xs\t\x0b5>\t;'
        var34 = module0.pkg_commit_hash(var33)
        assert var34 is not None
        var35 = None
        var36 = module0.pkg_commit_hash(var35)
        assert var36 is not None
        var37 = 'DkC\'CrD}n?\\"bR \'z%6'
        var38 = module0.pkg_commit_hash(var37)
        assert var38 is not None
        var39 = None
        var40 = module0.pkg_commit_hash(var39)
        assert var40 is not None
        var41 = module0.get_sys_info()
    except BaseException:
        pass
