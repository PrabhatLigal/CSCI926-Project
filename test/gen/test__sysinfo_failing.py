# Automatically generated by Pynguin.
import _sysinfo as module0


def test_case_0():
    try:
        var0 = ()
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_1():
    try:
        var0 = True
        var1 = None
        var2 = module0.pkg_commit_hash(var1)
        assert var2 is not None
        var3 = {var0: var0, var0: var0}
        var4 = module0.pkg_commit_hash(var3)
    except BaseException:
        pass


def test_case_2():
    try:
        var0 = '9yM_@*"a<\r(6<<$c0gy('
        var1 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_3():
    try:
        var0 = 1122.3281
        var1 = b'G\x9bF\x0b}\xf9c\x8e\x1a\xbf\x94\x919\xceA\x00\xfb\xcfq'
        var2 = module0.pkg_info(var1)
    except BaseException:
        pass


def test_case_4():
    try:
        var0 = module0.get_sys_info()
    except BaseException:
        pass


def test_case_5():
    try:
        var0 = 4091
        var1 = var0,
        var2 = {var1, var1}
        var3 = module0.pkg_commit_hash(var2)
    except BaseException:
        pass


def test_case_6():
    try:
        var0 = b'2'
        var1 = [var0]
        var2 = module0.pkg_commit_hash(var1)
    except BaseException:
        pass


def test_case_7():
    try:
        var0 = False
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass


def test_case_8():
    try:
        var0 = None
        var1 = True
        var2 = module0.pkg_commit_hash(var0)
        assert var2 is not None
        var3 = '`moA,x\\"&^)'
        var4 = module0.pkg_commit_hash(var3)
        assert var4 is not None
        var5 = 'c'
        var6 = module0.pkg_info(var5)
    except BaseException:
        pass


def test_case_9():
    try:
        var0 = b'\xf2\xfb\xd2\xbe\xf1'
        var1 = module0.pkg_commit_hash(var0)
    except BaseException:
        pass
